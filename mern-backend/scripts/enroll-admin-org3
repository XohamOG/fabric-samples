const { Wallets } = require('fabric-network');
const path = require('path');
const fs = require('fs');

async function enrollAdminOrg3() {
    try {
        // Define Org3 wallet path
        const walletPath = path.join(__dirname, '../wallets/org3-wallet');
        const wallet = await Wallets.newFileSystemWallet(walletPath);
        console.log(`Wallet path: ${walletPath}`);

        // Check if the admin identity already exists in the wallet
        const adminExists = await wallet.get('admin');
        if (adminExists) {
            console.log('Admin "admin" already exists in the wallet');
            return;
        }

        // Create admin identity for Org3
        const adminIdentity = {
            credentials: {
                certificate: fs.readFileSync(path.join(walletPath, 'msp/signcerts/admin-cert.pem'), 'utf8'),
                privateKey: fs.readFileSync(path.join(walletPath, 'msp/keystore/admin-key.pem'), 'utf8')
            },
            mspId: 'Org3MSP',
            type: 'X.509'
        };

        // Add admin identity to the wallet
        await wallet.put('admin', adminIdentity);
        console.log('Successfully enrolled admin "admin" for Org3 and imported it into the wallet');
    } catch (error) {
        console.error(`Failed to enroll admin "admin" for Org3: ${error}`);
    }
}

enrollAdminOrg3();
